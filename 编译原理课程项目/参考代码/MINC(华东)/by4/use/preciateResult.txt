第1步
符号栈:<函数定义> # 
输入栈:
所用推出式：<函数定义>-><修饰词闭包><类型><变量>(<参数声明>){<函数块>}

第2步
符号栈:<修饰词闭包> <类型> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:
所用推出式：<修饰词闭包>->$

第3步
符号栈:<类型> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:
所用推出式：<类型>->type<取地址>

第4步
符号栈:type <取地址> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:
匹配!1
所用推出式：
<类型>->type<取地址>

id ( ) { type id ; id = digit + digit ; id ( id ) ; return digit ; } # 第5步
符号栈:<取地址> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:
所用推出式：<取地址>-><星号闭包>

第6步
符号栈:<星号闭包> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:
所用推出式：<星号闭包>->$

第7步
符号栈:<变量> ( <参数声明> ) { <函数块> } # 
输入栈:
所用推出式：<变量>-><标志符><数组下标>

第8步
符号栈:<标志符> <数组下标> ( <参数声明> ) { <函数块> } # 
输入栈:
所用推出式：<标志符>->id

第9步
符号栈:id <数组下标> ( <参数声明> ) { <函数块> } # 
输入栈:
匹配!2
所用推出式：
<标志符>->id

第10步
符号栈:<数组下标> ( <参数声明> ) { <函数块> } # 
输入栈:
所用推出式：<数组下标>->$

第11步
符号栈:( <参数声明> ) { <函数块> } # 
输入栈:
匹配!3
所用推出式：
<数组下标>->$

第12步
符号栈:<参数声明> ) { <函数块> } # 
输入栈:
所用推出式：<参数声明>->$

第13步
符号栈:) { <函数块> } # 
输入栈:
匹配!4
所用推出式：
<参数声明>->$

第14步
符号栈:{ <函数块> } # 
输入栈:
匹配!5
所用推出式：
<参数声明>->$

第15步
符号栈:<函数块> } # 
输入栈:
所用推出式：<函数块>-><声明语句闭包><函数块闭包>

第16步
符号栈:<声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<声明语句闭包>-><声明语句><声明语句闭包>

第17步
符号栈:<声明语句> <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<声明语句>-><声明>;

第18步
符号栈:<声明> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<声明>-><修饰词闭包><类型><变量><赋初值>

第19步
符号栈:<修饰词闭包> <类型> <变量> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<修饰词闭包>->$

第20步
符号栈:<类型> <变量> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<类型>->type<取地址>

第21步
符号栈:type <取地址> <变量> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
匹配!6
所用推出式：
<类型>->type<取地址>

第22步
符号栈:<取地址> <变量> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<取地址>-><星号闭包>

第23步
符号栈:<星号闭包> <变量> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<星号闭包>->$

第24步
符号栈:<变量> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<变量>-><标志符><数组下标>

第25步
符号栈:<标志符> <数组下标> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<标志符>->id

第26步
符号栈:id <数组下标> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
匹配!7
所用推出式：
<标志符>->id

第27步
符号栈:<数组下标> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<数组下标>->$

第28步
符号栈:<赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<赋初值>->$

第29步
符号栈:; <声明语句闭包> <函数块闭包> } # 
输入栈:
匹配!8
所用推出式：
<赋初值>->$

第30步
符号栈:<声明语句闭包> <函数块闭包> } # 
输入栈:
所用推出式：<声明语句闭包>->$

第31步
符号栈:<函数块闭包> } # 
输入栈:
所用推出式：<函数块闭包>-><赋值函数><函数块闭包>

第32步
符号栈:<赋值函数> <函数块闭包> } # 
输入栈:
所用推出式：<赋值函数>-><变量><赋值或函数调用>

第33步
符号栈:<变量> <赋值或函数调用> <函数块闭包> } # 
输入栈:
所用推出式：<变量>-><标志符><数组下标>

第34步
符号栈:<标志符> <数组下标> <赋值或函数调用> <函数块闭包> } # 
输入栈:
所用推出式：<标志符>->id

第35步
符号栈:id <数组下标> <赋值或函数调用> <函数块闭包> } # 
输入栈:
匹配!9
所用推出式：
<标志符>->id

第36步
符号栈:<数组下标> <赋值或函数调用> <函数块闭包> } # 
输入栈:
所用推出式：<数组下标>->$

第37步
符号栈:<赋值或函数调用> <函数块闭包> } # 
输入栈:
所用推出式：<赋值或函数调用>->=<右值>;

第38步
符号栈:= <右值> ; <函数块闭包> } # 
输入栈:
匹配!10
所用推出式：
<赋值或函数调用>->=<右值>;

第39步
符号栈:<右值> ; <函数块闭包> } # 
输入栈:
所用推出式：<右值>-><表达式>

第40步
符号栈:<表达式> ; <函数块闭包> } # 
输入栈:
所用推出式：<表达式>-><因子><项>

第41步
符号栈:<因子> <项> ; <函数块闭包> } # 
输入栈:
所用推出式：<因子>-><因式><因式递归>

第42步
符号栈:<因式> <因式递归> <项> ; <函数块闭包> } # 
输入栈:
所用推出式：<因式>-><数字>

第43步
符号栈:<数字> <因式递归> <项> ; <函数块闭包> } # 
输入栈:
所用推出式：<数字>->digit

第44步
符号栈:digit <因式递归> <项> ; <函数块闭包> } # 
输入栈:
匹配!11
所用推出式：
<数字>->digit

第45步
符号栈:<因式递归> <项> ; <函数块闭包> } # 
输入栈:
所用推出式：<因式递归>->$

第46步
符号栈:<项> ; <函数块闭包> } # 
输入栈:
所用推出式：<项>->+<因子><项>

第47步
符号栈:+ <因子> <项> ; <函数块闭包> } # 
输入栈:
匹配!12
所用推出式：
<项>->+<因子><项>

第48步
符号栈:<因子> <项> ; <函数块闭包> } # 
输入栈:
所用推出式：<因子>-><因式><因式递归>

第49步
符号栈:<因式> <因式递归> <项> ; <函数块闭包> } # 
输入栈:
所用推出式：<因式>-><数字>

第50步
符号栈:<数字> <因式递归> <项> ; <函数块闭包> } # 
输入栈:
所用推出式：<数字>->digit

第51步
符号栈:digit <因式递归> <项> ; <函数块闭包> } # 
输入栈:
匹配!13
所用推出式：
<数字>->digit

第52步
符号栈:<因式递归> <项> ; <函数块闭包> } # 
输入栈:
所用推出式：<因式递归>->$

第53步
符号栈:<项> ; <函数块闭包> } # 
输入栈:
所用推出式：<项>->$

第54步
符号栈:; <函数块闭包> } # 
输入栈:
匹配!14
所用推出式：
<项>->$

第55步
符号栈:<函数块闭包> } # 
输入栈:
所用推出式：<函数块闭包>-><赋值函数><函数块闭包>

第56步
符号栈:<赋值函数> <函数块闭包> } # 
输入栈:
所用推出式：<赋值函数>-><变量><赋值或函数调用>

第57步
符号栈:<变量> <赋值或函数调用> <函数块闭包> } # 
输入栈:
所用推出式：<变量>-><标志符><数组下标>

第58步
符号栈:<标志符> <数组下标> <赋值或函数调用> <函数块闭包> } # 
输入栈:
所用推出式：<标志符>->id

第59步
符号栈:id <数组下标> <赋值或函数调用> <函数块闭包> } # 
输入栈:
匹配!15
所用推出式：
<标志符>->id

第60步
符号栈:<数组下标> <赋值或函数调用> <函数块闭包> } # 
输入栈:
所用推出式：<数组下标>->$

第61步
符号栈:<赋值或函数调用> <函数块闭包> } # 
输入栈:
所用推出式：<赋值或函数调用>->(<参数列表>);

第62步
符号栈:( <参数列表> ) ; <函数块闭包> } # 
输入栈:
匹配!16
所用推出式：
<赋值或函数调用>->(<参数列表>);

第63步
符号栈:<参数列表> ) ; <函数块闭包> } # 
输入栈:
所用推出式：<参数列表>-><参数><参数闭包>

第64步
符号栈:<参数> <参数闭包> ) ; <函数块闭包> } # 
输入栈:
所用推出式：<参数>-><标志符>

第65步
符号栈:<标志符> <参数闭包> ) ; <函数块闭包> } # 
输入栈:
所用推出式：<标志符>->id

第66步
符号栈:id <参数闭包> ) ; <函数块闭包> } # 
输入栈:
匹配!17
所用推出式：
<标志符>->id

第67步
符号栈:<参数闭包> ) ; <函数块闭包> } # 
输入栈:
所用推出式：<参数闭包>->$

第68步
符号栈:) ; <函数块闭包> } # 
输入栈:
匹配!18
所用推出式：
<参数闭包>->$

第69步
符号栈:; <函数块闭包> } # 
输入栈:
匹配!19
所用推出式：
<参数闭包>->$

第70步
符号栈:<函数块闭包> } # 
输入栈:
所用推出式：<函数块闭包>-><函数返回><函数块闭包>

第71步
符号栈:<函数返回> <函数块闭包> } # 
输入栈:
所用推出式：<函数返回>->return<因式>;

第72步
符号栈:return <因式> ; <函数块闭包> } # 
输入栈:
匹配!20
所用推出式：
<函数返回>->return<因式>;

第73步
符号栈:<因式> ; <函数块闭包> } # 
输入栈:
所用推出式：<因式>-><数字>

第74步
符号栈:<数字> ; <函数块闭包> } # 
输入栈:
所用推出式：<数字>->digit

第75步
符号栈:digit ; <函数块闭包> } # 
输入栈:
匹配!21
所用推出式：
<数字>->digit

第76步
符号栈:; <函数块闭包> } # 
输入栈:
匹配!22
所用推出式：
<数字>->digit

第77步
符号栈:<函数块闭包> } # 
输入栈:
所用推出式：<函数块闭包>->$

第78步
符号栈:} # 
输入栈:
匹配!23
所用推出式：
<函数块闭包>->$

第79步
符号栈:# 
输入栈:
成功!
